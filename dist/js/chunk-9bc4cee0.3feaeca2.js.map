{"version":3,"sources":["webpack:///./src/components/page/Upload.vue?493b","webpack:///./src/assets/img/img.jpg","webpack:///./node_modules/vue-cropperjs/dist/VueCropper.js","webpack:///./src/components/page/Upload.vue?8797","webpack:///src/components/page/Upload.vue","webpack:///./src/components/page/Upload.vue?971b","webpack:///./src/components/page/Upload.vue","webpack:///./node_modules/cropperjs/dist/cropper.js"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Upload_vue_vue_type_style_index_0_id_03421e96_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Upload_vue_vue_type_style_index_0_id_03421e96_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","module","exports","p","Object","defineProperty","value","_cropperjs","_cropperjs2","_interopRequireDefault","obj","__esModule","default","_objectWithoutProperties","keys","target","i","indexOf","prototype","hasOwnProperty","call","render","h","style","this","containerStyle","ref","attrs","src","alt","imgStyle","props","type","String","viewMode","Number","dragMode","aspectRatio","data","preview","Array","Element","NodeList","responsive","Boolean","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","Function","cropstart","cropmove","cropend","crop","zoom","mounted","_$options$props","$options","key","undefined","cropper","$refs","img","methods","reset","clear","initCrop","replace","url","onlyColorChanged","arguments","length","enable","disable","destroy","move","offsetX","offsetY","moveTo","x","y","relativeZoom","ratio","_originalEvent","zoomTo","rotate","degree","rotateTo","scaleX","_scaleX","scaleY","_scaleY","scale","getData","rounded","setData","getContainerData","getImageData","getCanvasData","setCanvasData","getCropBoxData","setCropBoxData","getCroppedCanvas","options","setAspectRatio","setDragMode","mode","_vm","_h","$createElement","_c","_self","staticClass","separator","_v","_m","drag","action","multiple","slot","cropImg","name","accept","on","change","setImage","title","visible","dialogVisible","width","update:visible","$event","staticStyle","height","imgSrc","cropImage","click","cancelCrop","staticRenderFns","href","Uploadvue_type_script_lang_js_","defaultSrc","fileList","components","VueCropper","VueCropper_default","a","e","_this","file","files","includes","reader","FileReader","onload","event","result","readAsDataURL","toDataURL","imageuploaded","res","console","log","handleError","$notify","error","message","created","page_Uploadvue_type_script_lang_js_","component","componentNormalizer","__file","__webpack_exports__","global","factory","_typeof","Symbol","iterator","constructor","_classCallCheck","instance","Constructor","TypeError","_defineProperties","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","isArray","arr2","iter","toString","from","IS_BROWSER","window","WINDOW","IS_TOUCH_DEVICE","document","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","MIN_CONTAINER_WIDTH","MIN_CONTAINER_HEIGHT","DEFAULTS","initialAspectRatio","NaN","TEMPLATE","isNaN","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","isPlainObject","_constructor","isFunction","slice","toArray","forEach","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","property","hasClass","classList","contains","className","addClass","elem","add","trim","removeClass","remove","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","dataset","getAttribute","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","get","set","addEventListener","removeEventListener","removeListener","handler","split","listeners","addListener","_handler","_element$listeners","_len2","_key2","apply","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","translateX","translateY","values","push","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","ratios","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","z2","sort","b","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","count","_ref3","getAdjustedSizes","_ref4","isValidWidth","isValidHeight","adjustedWidth","getRotatedSizes","_ref5","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","drawImage","map","param","floor","fromCharCode","getStringFromCharCode","dataView","start","str","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","chunkSize","subarray","btoa","resetAndGetOrientation","orientation","DataView","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","parseOrientation","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","containerData","offsetWidth","offsetHeight","imageData","rotated","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","dragBox","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","ctrlKey","changedTouches","touch","identifier","originalEvent","cropping","right","bottom","renderable","shiftKey","range","check","side","hasSameSize","isImg","replaced","uncreate","load","originalUrl","_this$canvasData","pivot","oldRatio","sized","widthChanged","heightChanged","HTMLCanvasElement","source","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","read","xhr","XMLHttpRequest","clone","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","response","onloadend","open","responseType","withCredentials","send","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","IS_SAFARI","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild"],"mappings":"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","file":"js/chunk-9bc4cee0.3feaeca2.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Upload.vue?vue&type=style&index=0&id=03421e96&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Upload.vue?vue&type=style&index=0&id=03421e96&scoped=true&lang=css&\"","module.exports = __webpack_public_path__ + \"img/img.146655c9.jpg\";","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _cropperjs = require('cropperjs');\n\nvar _cropperjs2 = _interopRequireDefault(_cropperjs);\n\nrequire('cropperjs/dist/cropper.css');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nexports.default = {\n  render: function render(h) {\n    return h('div', { style: this.containerStyle }, [h('img', {\n      ref: 'img',\n      attrs: {\n        src: this.src,\n        alt: this.alt || 'image',\n        style: 'max-width: 100%'\n      },\n      style: this.imgStyle\n    })]);\n  },\n\n  props: {\n    containerStyle: Object,\n    src: {\n      type: String,\n      default: ''\n    },\n    alt: String,\n    imgStyle: Object,\n\n    viewMode: Number,\n    dragMode: String,\n    aspectRatio: Number,\n    data: Object,\n    preview: [String, Array, Element, NodeList],\n    responsive: {\n      type: Boolean,\n      default: true\n    },\n    restore: {\n      type: Boolean,\n      default: true\n    },\n    checkCrossOrigin: {\n      type: Boolean,\n      default: true\n    },\n    checkOrientation: {\n      type: Boolean,\n      default: true\n    },\n    modal: {\n      type: Boolean,\n      default: true\n    },\n    guides: {\n      type: Boolean,\n      default: true\n    },\n    center: {\n      type: Boolean,\n      default: true\n    },\n    highlight: {\n      type: Boolean,\n      default: true\n    },\n    background: {\n      type: Boolean,\n      default: true\n    },\n    autoCrop: {\n      type: Boolean,\n      default: true\n    },\n    autoCropArea: Number,\n    movable: {\n      type: Boolean,\n      default: true\n    },\n    rotatable: {\n      type: Boolean,\n      default: true\n    },\n    scalable: {\n      type: Boolean,\n      default: true\n    },\n    zoomable: {\n      type: Boolean,\n      default: true\n    },\n    zoomOnTouch: {\n      type: Boolean,\n      default: true\n    },\n    zoomOnWheel: {\n      type: Boolean,\n      default: true\n    },\n    wheelZoomRatio: Number,\n    cropBoxMovable: {\n      type: Boolean,\n      default: true\n    },\n    cropBoxResizable: {\n      type: Boolean,\n      default: true\n    },\n    toggleDragModeOnDblclick: {\n      type: Boolean,\n      default: true\n    },\n\n    minCanvasWidth: Number,\n    minCanvasHeight: Number,\n    minCropBoxWidth: Number,\n    minCropBoxHeight: Number,\n    minContainerWidth: Number,\n    minContainerHeight: Number,\n\n    ready: Function,\n    cropstart: Function,\n    cropmove: Function,\n    cropend: Function,\n    crop: Function,\n    zoom: Function\n  },\n  mounted: function mounted() {\n    var _$options$props = this.$options.props,\n        containerStyle = _$options$props.containerStyle,\n        src = _$options$props.src,\n        alt = _$options$props.alt,\n        imgStyle = _$options$props.imgStyle,\n        data = _objectWithoutProperties(_$options$props, ['containerStyle', 'src', 'alt', 'imgStyle']);\n\n    var props = {};\n\n    for (var key in data) {\n      if (this[key] !== undefined) {\n        props[key] = this[key];\n      }\n    }\n\n    this.cropper = new _cropperjs2.default(this.$refs.img, props);\n  },\n\n  methods: {\n    reset: function reset() {\n      return this.cropper.reset();\n    },\n    clear: function clear() {\n      return this.cropper.clear();\n    },\n    initCrop: function initCrop() {\n      return this.cropper.crop();\n    },\n    replace: function replace(url) {\n      var onlyColorChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      return this.cropper.replace(url, onlyColorChanged);\n    },\n    enable: function enable() {\n      return this.cropper.enable();\n    },\n    disable: function disable() {\n      return this.cropper.disable();\n    },\n    destroy: function destroy() {\n      return this.cropper.destroy();\n    },\n    move: function move(offsetX, offsetY) {\n      return this.cropper.move(offsetX, offsetY);\n    },\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n\n      return this.cropper.moveTo(x, y);\n    },\n    relativeZoom: function relativeZoom(ratio, _originalEvent) {\n      return this.cropper.zoom(ratio, _originalEvent);\n    },\n    zoomTo: function zoomTo(ratio, _originalEvent) {\n      return this.cropper.zoomTo(ratio, _originalEvent);\n    },\n    rotate: function rotate(degree) {\n      return this.cropper.rotate(degree);\n    },\n    rotateTo: function rotateTo(degree) {\n      return this.cropper.rotateTo(degree);\n    },\n    scaleX: function scaleX(_scaleX) {\n      return this.cropper.scaleX(_scaleX);\n    },\n    scaleY: function scaleY(_scaleY) {\n      return this.cropper.scaleY(_scaleY);\n    },\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n\n      return this.cropper.scale(scaleX, scaleY);\n    },\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      return this.cropper.getData(rounded);\n    },\n    setData: function setData(data) {\n      return this.cropper.setData(data);\n    },\n    getContainerData: function getContainerData() {\n      return this.cropper.getContainerData();\n    },\n    getImageData: function getImageData() {\n      return this.cropper.getImageData();\n    },\n    getCanvasData: function getCanvasData() {\n      return this.cropper.getCanvasData();\n    },\n    setCanvasData: function setCanvasData(data) {\n      return this.cropper.setCanvasData(data);\n    },\n    getCropBoxData: function getCropBoxData() {\n      return this.cropper.getCropBoxData();\n    },\n    setCropBoxData: function setCropBoxData(data) {\n      return this.cropper.setCropBoxData(data);\n    },\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      return this.cropper.getCroppedCanvas(options);\n    },\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      return this.cropper.setAspectRatio(aspectRatio);\n    },\n    setDragMode: function setDragMode(mode) {\n      return this.cropper.setDragMode(mode);\n    }\n  }\n};","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"crumbs\"},[_c('el-breadcrumb',{attrs:{\"separator\":\"/\"}},[_c('el-breadcrumb-item',[_c('i',{staticClass:\"el-icon-lx-calendar\"}),_vm._v(\" 表单\")]),_c('el-breadcrumb-item',[_vm._v(\"图片上传\")])],1)],1),_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"content-title\"},[_vm._v(\"支持拖拽\")]),_vm._m(0),_c('el-upload',{staticClass:\"upload-demo\",attrs:{\"drag\":\"\",\"action\":\"/api/posts/\",\"multiple\":\"\"}},[_c('i',{staticClass:\"el-icon-upload\"}),_c('div',{staticClass:\"el-upload__text\"},[_vm._v(\"将文件拖到此处，或\"),_c('em',[_vm._v(\"点击上传\")])]),_c('div',{staticClass:\"el-upload__tip\",attrs:{\"slot\":\"tip\"},slot:\"tip\"},[_vm._v(\"只能上传jpg/png文件，且不超过500kb\")])]),_c('div',{staticClass:\"content-title\"},[_vm._v(\"支持裁剪\")]),_vm._m(1),_c('div',{staticClass:\"crop-demo\"},[_c('img',{staticClass:\"pre-img\",attrs:{\"src\":_vm.cropImg}}),_c('div',{staticClass:\"crop-demo-btn\"},[_vm._v(\"选择图片\\n                \"),_c('input',{staticClass:\"crop-input\",attrs:{\"type\":\"file\",\"name\":\"image\",\"accept\":\"image/*\"},on:{\"change\":_vm.setImage}})])]),_c('el-dialog',{attrs:{\"title\":\"裁剪图片\",\"visible\":_vm.dialogVisible,\"width\":\"30%\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('vue-cropper',{ref:\"cropper\",staticStyle:{\"width\":\"100%\",\"height\":\"300px\"},attrs:{\"src\":_vm.imgSrc,\"ready\":_vm.cropImage,\"zoom\":_vm.cropImage,\"cropmove\":_vm.cropImage}}),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.cancelCrop}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.dialogVisible = false}}},[_vm._v(\"确 定\")])],1)],1)],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"plugins-tips\"},[_vm._v(\"\\n            Element UI自带上传组件。\\n            访问地址：\"),_c('a',{attrs:{\"href\":\"http://element.eleme.io/#/zh-CN/component/upload\",\"target\":\"_blank\"}},[_vm._v(\"Element UI Upload\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"plugins-tips\"},[_vm._v(\"\\n            vue-cropperjs：一个封装了 cropperjs 的 Vue 组件。\\n            访问地址：\"),_c('a',{attrs:{\"href\":\"https://github.com/Agontuk/vue-cropperjs\",\"target\":\"_blank\"}},[_vm._v(\"vue-cropperjs\")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item><i class=\"el-icon-lx-calendar\"></i> 表单</el-breadcrumb-item>\r\n                <el-breadcrumb-item>图片上传</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <div class=\"container\">\r\n            <div class=\"content-title\">支持拖拽</div>\r\n            <div class=\"plugins-tips\">\r\n                Element UI自带上传组件。\r\n                访问地址：<a href=\"http://element.eleme.io/#/zh-CN/component/upload\" target=\"_blank\">Element UI Upload</a>\r\n            </div>\r\n            <el-upload\r\n                class=\"upload-demo\"\r\n                drag\r\n                action=\"/api/posts/\"\r\n                multiple>\r\n                <i class=\"el-icon-upload\"></i>\r\n                <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n                <div class=\"el-upload__tip\" slot=\"tip\">只能上传jpg/png文件，且不超过500kb</div>\r\n            </el-upload>\r\n            <div class=\"content-title\">支持裁剪</div>\r\n            <div class=\"plugins-tips\">\r\n                vue-cropperjs：一个封装了 cropperjs 的 Vue 组件。\r\n                访问地址：<a href=\"https://github.com/Agontuk/vue-cropperjs\" target=\"_blank\">vue-cropperjs</a>\r\n            </div>\r\n            <div class=\"crop-demo\">\r\n                <img :src=\"cropImg\" class=\"pre-img\">\r\n                <div class=\"crop-demo-btn\">选择图片\r\n                    <input class=\"crop-input\" type=\"file\" name=\"image\" accept=\"image/*\" @change=\"setImage\"/>\r\n                </div>\r\n            </div>\r\n        \r\n            <el-dialog title=\"裁剪图片\" :visible.sync=\"dialogVisible\" width=\"30%\">\r\n                <vue-cropper ref='cropper' :src=\"imgSrc\" :ready=\"cropImage\" :zoom=\"cropImage\" :cropmove=\"cropImage\" style=\"width:100%;height:300px;\"></vue-cropper>\r\n                <span slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"cancelCrop\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"dialogVisible = false\">确 定</el-button>\r\n                </span>\r\n            </el-dialog>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import VueCropper  from 'vue-cropperjs';\r\n    export default {\r\n        name: 'upload',\r\n        data: function(){\r\n            return {\r\n                defaultSrc: require('../../assets/img/img.jpg'),\r\n                fileList: [],\r\n                imgSrc: '',\r\n                cropImg: '',\r\n                dialogVisible: false,\r\n            }\r\n        },\r\n        components: {\r\n            VueCropper\r\n        },\r\n        methods:{\r\n            setImage(e){\r\n                const file = e.target.files[0];\r\n                if (!file.type.includes('image/')) {\r\n                    return;\r\n                }\r\n                const reader = new FileReader();\r\n                reader.onload = (event) => {\r\n                    this.dialogVisible = true;\r\n                    this.imgSrc = event.target.result;\r\n                    this.$refs.cropper && this.$refs.cropper.replace(event.target.result);\r\n                };\r\n                reader.readAsDataURL(file);\r\n            },\r\n            cropImage () {\r\n                this.cropImg = this.$refs.cropper.getCroppedCanvas().toDataURL();\r\n            },\r\n            cancelCrop(){\r\n                this.dialogVisible = false;\r\n                this.cropImg = this.defaultSrc;\r\n            },\r\n            imageuploaded(res) {\r\n                console.log(res)\r\n            },\r\n            handleError(){\r\n                this.$notify.error({\r\n                    title: '上传失败',\r\n                    message: '图片上传接口上传失败，可更改为自己的服务器接口'\r\n                });\r\n            }\r\n        },\r\n        created(){\r\n            this.cropImg = this.defaultSrc;\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .content-title{\r\n        font-weight: 400;\r\n        line-height: 50px;\r\n        margin: 10px 0;\r\n        font-size: 22px;\r\n        color: #1f2f3d;\r\n    }\r\n    .pre-img{   \r\n        width: 100px;\r\n        height: 100px;\r\n        background: #f8f8f8;\r\n        border: 1px solid #eee;\r\n        border-radius: 5px;\r\n    }\r\n    .crop-demo{\r\n        display: flex;\r\n        align-items: flex-end;\r\n    }\r\n    .crop-demo-btn{\r\n        position: relative;\r\n        width: 100px;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        padding: 0 20px;\r\n        margin-left: 30px;\r\n        background-color: #409eff;\r\n        color: #fff;\r\n        font-size: 14px;\r\n        border-radius: 4px;\r\n        box-sizing: border-box;\r\n    }\r\n    .crop-input{\r\n        position: absolute;\r\n        width: 100px;\r\n        height: 40px;\r\n        left: 0;\r\n        top: 0;\r\n        opacity: 0;\r\n        cursor: pointer;\r\n    }\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Upload.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Upload.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Upload.vue?vue&type=template&id=03421e96&scoped=true&\"\nimport script from \"./Upload.vue?vue&type=script&lang=js&\"\nexport * from \"./Upload.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Upload.vue?vue&type=style&index=0&id=03421e96&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"03421e96\",\n  null\n  \n)\n\ncomponent.options.__file = \"Upload.vue\"\nexport default component.exports","/*!\n * Cropper.js v1.5.1\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2019-03-10T09:55:53.729Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Cropper = factory());\n}(this, function () { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link http://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = assign({}, pointers);\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : assign({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n\n      default:\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = this.element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var minContainerWidth = Number(options.minContainerWidth) || MIN_CONTAINER_WIDTH;\n      var minContainerHeight = Number(options.minContainerHeight) || MIN_CONTAINER_HEIGHT;\n\n      if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n        return;\n      }\n\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // No primary button (Usually the left button)\n      // Note that touch events have no `buttons` or `button` property\n      || isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n\n          default:\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n\n        default:\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Read ArrayBuffer from Data URL of JPEG images directly for better performance.\n\n\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          this.read(dataURLToArrayBuffer(url));\n          return;\n        }\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin;\n        var crossOriginUrl;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          crossOrigin = element.crossOrigin;\n\n          if (crossOrigin) {\n            crossOriginUrl = url;\n          } else {\n            crossOrigin = 'anonymous'; // Bust cache when there is not a \"crossOrigin\" property\n\n            crossOriginUrl = addTimestamp(url);\n          }\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.isImg ? this.element : this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true;\n        var IS_SAFARI = WINDOW.navigator && /^(?:.(?!chrome|android))*safari/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Modern browsers (except Safari)\n\n\n        if (image.naturalWidth && !IS_SAFARI) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!IS_SAFARI) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS Safari will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!IS_SAFARI) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n}));\n"],"sourceRoot":""}